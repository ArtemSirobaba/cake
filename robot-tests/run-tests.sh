#!/bin/bash

# Robot Framework Test Runner –¥–ª—è Cake –¥–æ–¥–∞—Ç–∫—É
# –í–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è: ./run-tests.sh [options]

set -e

# –ö–æ–ª—å–æ—Ä–∏ –¥–ª—è –≤–∏–≤–æ–¥—É
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

# –ö–æ–Ω—Ñ—ñ–≥—É—Ä–∞—Ü—ñ—è –ø–æ –∑–∞–º–æ–≤—á—É–≤–∞–Ω–Ω—é
HEADLESS=false
BASE_URL="http://localhost:5173"
BROWSER="Chrome"
TEST_SUITE=""
TAGS=""
PARALLEL=false
REPORT_DIR="reports"

# –§—É–Ω–∫—Ü—ñ—è –¥–ª—è –≤–∏–≤–æ–¥—É –¥–æ–≤—ñ–¥–∫–∏
show_help() {
    cat << EOF
Robot Framework Test Runner –¥–ª—è Cake –¥–æ–¥–∞—Ç–∫—É

–í–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è: $0 [–û–ü–¶–Ü–á]

–û–ü–¶–Ü–á:
    -h, --help          –ü–æ–∫–∞–∑–∞—Ç–∏ —Ü—é –¥–æ–≤—ñ–¥–∫—É
    --headless          –ó–∞–ø—É—Å—Ç–∏—Ç–∏ –±—Ä–∞—É–∑–µ—Ä —É headless —Ä–µ–∂–∏–º—ñ
    --url URL           –ë–∞–∑–æ–≤–∏–π URL –¥–æ–¥–∞—Ç–∫—É (–∑–∞ –∑–∞–º–æ–≤—á—É–≤–∞–Ω–Ω—è–º: $BASE_URL)
    --browser BROWSER   –ë—Ä–∞—É–∑–µ—Ä –¥–ª—è —Ç–µ—Å—Ç—É–≤–∞–Ω–Ω—è (–∑–∞ –∑–∞–º–æ–≤—á—É–≤–∞–Ω–Ω—è–º: $BROWSER)
    --suite SUITE       –ó–∞–ø—É—Å—Ç–∏—Ç–∏ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–∏–π test suite
    --tags TAGS         –ó–∞–ø—É—Å—Ç–∏—Ç–∏ —Ç–µ—Å—Ç–∏ –∑ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–∏–º–∏ —Ç–µ–≥–∞–º–∏
    --parallel          –ü–∞—Ä–∞–ª–µ–ª—å–Ω–∏–π –∑–∞–ø—É—Å–∫ —Ç–µ—Å—Ç—ñ–≤
    --reports-dir DIR   –î–∏—Ä–µ–∫—Ç–æ—Ä—ñ—è –¥–ª—è –∑–≤—ñ—Ç—ñ–≤ (–∑–∞ –∑–∞–º–æ–≤—á—É–≤–∞–Ω–Ω—è–º: $REPORT_DIR)

–ü–†–ò–ö–õ–ê–î–ò:
    $0                              # –ó–∞–ø—É—Å–∫ –≤—Å—ñ—Ö —Ç–µ—Å—Ç—ñ–≤
    $0 --headless                   # –ó–∞–ø—É—Å–∫ —É headless —Ä–µ–∂–∏–º—ñ
    $0 --tags smoke                 # –ó–∞–ø—É—Å–∫ —Ç—ñ–ª—å–∫–∏ smoke —Ç–µ—Å—Ç—ñ–≤
    $0 --suite smoke_tests.robot    # –ó–∞–ø—É—Å–∫ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ suite
    $0 --parallel --headless        # –ü–∞—Ä–∞–ª–µ–ª—å–Ω–∏–π –∑–∞–ø—É—Å–∫ —É headless —Ä–µ–∂–∏–º—ñ

EOF
}

# –ü–∞—Ä—Å–∏–Ω–≥ –∞—Ä–≥—É–º–µ–Ω—Ç—ñ–≤ –∫–æ–º–∞–Ω–¥–Ω–æ–≥–æ —Ä—è–¥–∫–∞
parse_args() {
    while [[ $# -gt 0 ]]; do
        case $1 in
            -h|--help)
                show_help
                exit 0
                ;;
            --headless)
                HEADLESS=true
                shift
                ;;
            --url)
                BASE_URL="$2"
                shift 2
                ;;
            --browser)
                BROWSER="$2"
                shift 2
                ;;
            --suite)
                TEST_SUITE="$2"
                shift 2
                ;;
            --tags)
                TAGS="$2"
                shift 2
                ;;
            --parallel)
                PARALLEL=true
                shift
                ;;
            --reports-dir)
                REPORT_DIR="$2"
                shift 2
                ;;
            *)
                echo -e "${RED}–ù–µ–≤—ñ–¥–æ–º–∏–π –ø–∞—Ä–∞–º–µ—Ç—Ä: $1${NC}"
                echo "–í–∏–∫–æ—Ä–∏—Å—Ç–∞–π—Ç–µ --help –¥–ª—è –¥–æ–≤—ñ–¥–∫–∏"
                exit 1
                ;;
        esac
    done
}

# –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –∑–∞–ª–µ–∂–Ω–æ—Å—Ç–µ–π
check_dependencies() {
    echo -e "${BLUE}–ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –∑–∞–ª–µ–∂–Ω–æ—Å—Ç–µ–π...${NC}"
    
    # –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ Python
    if ! command -v python3 &> /dev/null; then
        echo -e "${RED}Python3 –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ. –ë—É–¥—å –ª–∞—Å–∫–∞, –≤—Å—Ç–∞–Ω–æ–≤—ñ—Ç—å Python 3.x${NC}"
        exit 1
    fi
    
    # –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ Robot Framework
    if ! python3 -c "import robot" &> /dev/null; then
        echo -e "${YELLOW}Robot Framework –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ. –í—Å—Ç–∞–Ω–æ–≤–ª—é—î–º–æ –∑–∞–ª–µ–∂–Ω–æ—Å—Ç—ñ...${NC}"
        pip3 install -r requirements.txt
    fi
    
    # –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—ñ –¥–æ–¥–∞—Ç–∫—É
    echo -e "${BLUE}–ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—ñ –¥–æ–¥–∞—Ç–∫—É –∑–∞ –∞–¥—Ä–µ—Å–æ—é $BASE_URL...${NC}"
    if ! curl -f "$BASE_URL" &> /dev/null; then
        echo -e "${YELLOW}–î–æ–¥–∞—Ç–æ–∫ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∏–π –∑–∞ –∞–¥—Ä–µ—Å–æ—é $BASE_URL${NC}"
        echo -e "${YELLOW}–ü–µ—Ä–µ–∫–æ–Ω–∞–π—Ç–µ—Å—è, —â–æ –¥–æ–¥–∞—Ç–æ–∫ –∑–∞–ø—É—â–µ–Ω–∏–π (yarn dev)${NC}"
        read -p "–ü—Ä–æ–¥–æ–≤–∂–∏—Ç–∏? (y/N): " -n 1 -r
        echo
        if [[ ! $REPLY =~ ^[Yy]$ ]]; then
            exit 1
        fi
    fi
    
    echo -e "${GREEN}–£—Å—ñ –∑–∞–ª–µ–∂–Ω–æ—Å—Ç—ñ –ø–µ—Ä–µ–≤—ñ—Ä–µ–Ω–æ ‚úì${NC}"
}

# –ü—ñ–¥–≥–æ—Ç–æ–≤–∫–∞ –¥–∏—Ä–µ–∫—Ç–æ—Ä—ñ—ó –¥–ª—è –∑–≤—ñ—Ç—ñ–≤
prepare_reports_dir() {
    echo -e "${BLUE}–ü—ñ–¥–≥–æ—Ç–æ–≤–∫–∞ –¥–∏—Ä–µ–∫—Ç–æ—Ä—ñ—ó –∑–≤—ñ—Ç—ñ–≤...${NC}"
    
    if [ -d "$REPORT_DIR" ]; then
        echo -e "${YELLOW}–û—á–∏—â–µ–Ω–Ω—è —ñ—Å–Ω—É—é—á–∏—Ö –∑–≤—ñ—Ç—ñ–≤...${NC}"
        rm -rf "$REPORT_DIR"/*
    else
        mkdir -p "$REPORT_DIR"
    fi
    
    echo -e "${GREEN}–î–∏—Ä–µ–∫—Ç–æ—Ä—ñ—è –∑–≤—ñ—Ç—ñ–≤ –ø—ñ–¥–≥–æ—Ç–æ–≤–ª–µ–Ω–∞ ‚úì${NC}"
}

# –ü–æ–±—É–¥–æ–≤–∞ –∫–æ–º–∞–Ω–¥–∏ Robot Framework
build_robot_command() {
    local cmd="robot"
    
    # –ë–∞–∑–æ–≤—ñ –ø–∞—Ä–∞–º–µ—Ç—Ä–∏
    cmd="$cmd --variable HEADLESS:$HEADLESS"
    cmd="$cmd --variable BASE_URL:$BASE_URL"
    cmd="$cmd --variable BROWSER:$BROWSER"
    cmd="$cmd --outputdir $REPORT_DIR"
    cmd="$cmd --log log.html"
    cmd="$cmd --report report.html"
    cmd="$cmd --xunit xunit.xml"
    
    # –î–æ–¥–∞—Ç–∫–æ–≤—ñ –ø–∞—Ä–∞–º–µ—Ç—Ä–∏
    if [[ -n "$TAGS" ]]; then
        cmd="$cmd --include $TAGS"
    fi
    
    # –í–∏–±—ñ—Ä test suite
    if [[ -n "$TEST_SUITE" ]]; then
        cmd="$cmd testcases/$TEST_SUITE"
    else
        cmd="$cmd testcases/"
    fi
    
    echo "$cmd"
}

# –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç—ñ–≤
run_tests() {
    echo -e "${BLUE}–ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç—ñ–≤ Robot Framework...${NC}"
    echo -e "${BLUE}–ö–æ–Ω—Ñ—ñ–≥—É—Ä–∞—Ü—ñ—è:${NC}"
    echo -e "  - Base URL: $BASE_URL"
    echo -e "  - Browser: $BROWSER"
    echo -e "  - Headless: $HEADLESS"
    echo -e "  - Parallel: $PARALLEL"
    [[ -n "$TAGS" ]] && echo -e "  - Tags: $TAGS"
    [[ -n "$TEST_SUITE" ]] && echo -e "  - Suite: $TEST_SUITE"
    echo ""
    
    local start_time=$(date +%s)
    
    if [[ "$PARALLEL" == "true" ]]; then
        echo -e "${BLUE}–ó–∞–ø—É—Å–∫ –ø–∞—Ä–∞–ª–µ–ª—å–Ω–∏—Ö —Ç–µ—Å—Ç—ñ–≤...${NC}"
        pabot --processes 2 \
              --variable HEADLESS:$HEADLESS \
              --variable BASE_URL:$BASE_URL \
              --variable BROWSER:$BROWSER \
              --outputdir $REPORT_DIR \
              --log log.html \
              --report report.html \
              --xunit xunit.xml \
              ${TAGS:+--include $TAGS} \
              ${TEST_SUITE:+testcases/$TEST_SUITE} \
              ${TEST_SUITE:-testcases/}
    else
        local cmd=$(build_robot_command)
        echo -e "${BLUE}–ö–æ–º–∞–Ω–¥–∞: $cmd${NC}"
        eval $cmd
    fi
    
    local end_time=$(date +%s)
    local duration=$((end_time - start_time))
    
    echo ""
    echo -e "${GREEN}–¢–µ—Å—Ç–∏ –∑–∞–≤–µ—Ä—à–µ–Ω–æ –∑–∞ ${duration} —Å–µ–∫—É–Ω–¥ ‚úì${NC}"
}

# –ì–µ–Ω–µ—Ä–∞—Ü—ñ—è –∑–≤—ñ—Ç—É –ø—Ä–æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∏
generate_summary() {
    echo -e "${BLUE}–ì–µ–Ω–µ—Ä–∞—Ü—ñ—è –ø—ñ–¥—Å—É–º–∫–æ–≤–æ–≥–æ –∑–≤—ñ—Ç—É...${NC}"
    
    if [[ -f "$REPORT_DIR/output.xml" ]]; then
        echo -e "${GREEN}–ó–≤—ñ—Ç–∏ –∑–≥–µ–Ω–µ—Ä–æ–≤–∞–Ω–æ:${NC}"
        echo -e "  - HTML –∑–≤—ñ—Ç: $REPORT_DIR/report.html"
        echo -e "  - –î–µ—Ç–∞–ª—å–Ω–∏–π –ª–æ–≥: $REPORT_DIR/log.html"
        echo -e "  - XML –≤–∏–≤—ñ–¥: $REPORT_DIR/output.xml"
        echo -e "  - xUnit –∑–≤—ñ—Ç: $REPORT_DIR/xunit.xml"
        echo ""
        
        # –°–ø—Ä–æ–±–∞ –≤—ñ–¥–∫—Ä–∏—Ç–∏ HTML –∑–≤—ñ—Ç
        if command -v open &> /dev/null; then
            echo -e "${BLUE}–í—ñ–¥–∫—Ä–∏–≤–∞—î–º–æ HTML –∑–≤—ñ—Ç...${NC}"
            open "$REPORT_DIR/report.html"
        elif command -v xdg-open &> /dev/null; then
            echo -e "${BLUE}–í—ñ–¥–∫—Ä–∏–≤–∞—î–º–æ HTML –∑–≤—ñ—Ç...${NC}"
            xdg-open "$REPORT_DIR/report.html"
        fi
    else
        echo -e "${RED}–§–∞–π–ª output.xml –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ. –¢–µ—Å—Ç–∏ –º–æ–∂—É—Ç—å –±—É—Ç–∏ –Ω–µ –≤–∏–∫–æ–Ω–∞–Ω—ñ.${NC}"
    fi
}

# –ì–æ–ª–æ–≤–Ω–∞ —Ñ—É–Ω–∫—Ü—ñ—è
main() {
    echo -e "${GREEN}ü§ñ Robot Framework Test Runner –¥–ª—è Cake –¥–æ–¥–∞—Ç–∫—É${NC}"
    echo ""
    
    parse_args "$@"
    check_dependencies
    prepare_reports_dir
    run_tests
    generate_summary
    
    echo ""
    echo -e "${GREEN}–ì–æ—Ç–æ–≤–æ! üéâ${NC}"
}

# –ó–∞–ø—É—Å–∫ –≥–æ–ª–æ–≤–Ω–æ—ó —Ñ—É–Ω–∫—Ü—ñ—ó
main "$@" 